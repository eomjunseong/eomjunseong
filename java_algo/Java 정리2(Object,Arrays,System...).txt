-바이트코드? JVM에서 실행이 가능한 코드; 
-"해당 클래스의 바이트코드가 메모리 공간에 로딩 되어야,,,,"

*힙영역 : 인스턴스 
*스택영역 : 지역변수, 매개변수 
*메소드영역 : 메소드의 바이트코드(클래스의 정보), static 변수
-String str = new String("aaa"); 
-힙 : new String("aaa")//가비지컬렉션 
-스택 : str //반환시 소멸



*OBJECT!!!//java.lang 
- protected void finalize() throws Throwable{};// 가비지컬렉션...
- public boolean equals(Obeject obj){if(this.num==((INum)obj).num).....};//내용비교하라고 만들어둠
- protected Object clone() throws CloneNotSupportedException{};
---public으로 확장 가능 반환형 변경가능 단, return (형변환)OBj 필수
---이것만 쓰면 단순히 인스턴스의 복사본을 만들어 참조값만 반환(알맹이는 같은걸 보고있음)// 해결책 상기해.
- interface Clonable{}//마커인터페이스 //'구현(할건없지만)' 되야  clon(Object...)e가능하다 의미함 
**Objects // java.util.
- public int hashCode(); // HashSet 에서 객체비교시 설정필요..
--- 특별한 경우가 아니라면 이런식으로 하자 
--- @Override
--- public int hashCode(){
---     return Object.hash(model,color); // 변수 넣음 
--- }

*WRAPPER
- Integer i = new Integer(1); // toString() 오버라이딩하고있음
- int k = i.intValue(); //언반싱 doubleValue()....
- Integer.max(n1,n2);
- Integer.min(n1,n2); 
- Integer.toBinaryString(12)//String임
- Integer.MAX_VALUE;



*Random//java.util.Random
- Random r = new Random(); //(12)seed//--> 그렇다고, 따로 System.currentTimeMillis() 안해줘도됨, this()로 구현되어있음 
- r.nextInt(1000);//0~999

*StringTokenizer(String str, string delim);
-StringTokenizer st = new StringTokenizer("12 + 36 - 8 / 2 = 44"," =-/+"); //' ' 공백도 거를려면 넣어줘야함, 숫자아님
-while(st.hasMoreTokens()){st.nextToken()}


*Arrays // Collections.에 관한것도 있으니 비교 공부....
- public static int[] copyOf(int[] original, int newLength); //0부터 newLength의 길이 만큼 복사 
- public static int[] copyOfRange(int[] original, int from, int to)//from~ to-1; 
- public static booelean equals(Object [], Object []); 
- Arrays.equals(ar1,ar2)// boolean 
- public static void sort(int[] a); //정렬 --> 인스턴스에 대해서는, interface Comparable 구현 하면됨 
- public static int binarySearch(int[] a ,int key);//없으면 음수 반환,있으면 idx반환//정렬이 선행되어야함  
- binarySearch도, Comparable(compareTo 가 기준임)


*System
- public static void arraycopy(Object src,int srcPos, Object dest, int destPos, int length)
---src의 srcPos에서 부터 lenth 길이만큼 dest에 destPos 부터 복사... 이건 Arrays와 달리 배열 새로 생성X
---** 범위 벗어나면 에러 

*interface Comparable{
    public int compareTo(Object o){

    }
}를 구현 하면, Arrays.sort() 가능



