#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<vector>

using namespace std;


int main(void){
	int arr[3]={4,5,1};
	int size = sizeof(arr)/sizeof(arr[0]);
	sort(arr,arr+size);
	do{
		for(int i = 0 ;i<size;i++){
			cout<< arr[i]<< " ";
		}
		cout<<endl;
	}while(next_permutation(arr,arr+size));
}

int main(void){
	int arr[3]={4,5,1};	
	vector<int> v(arr,arr+3);
	sort(v.begin(),v.end(),greater<int>());
	do{
		for(int i = 0 ;i<v.size();i++){
			cout<< v[i]<< " ";
		}
		cout<<endl;
	}while(prev_permutation(v.begin(), v.end()));
}
5 4 1
5 1 4
4 5 1
4 1 5
1 5 4
1 4 5

조합원할시 --> 
int check[6]={0,0,1,1,1,1}
int arr[6]={1,2,3,4,5,6};

do{
	for(int i = 9 ; i <6;i++){
		if(checl[i]==1){
			//4개 조합 --> 걍 DFS 준비하자 
		}
	}
}while(next_permutation(check.begin(),check.end));