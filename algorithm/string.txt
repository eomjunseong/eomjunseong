#include <string> 
namespace std;
	
string str ; 
str = "HI!";
string str2(str);
string str3 = str; ---> 다가능 다 다른 주소,

at : 예외 O 느림 
[] : 예외 x 빠름 

str1.front() //"BlockDMask" -> 'B'
str1.back()  //"BlockDMask" -> 'K'

str1.size(); ==str1.length()

str1.clear() //size ==0 , capacity 유지 

str1.empty() //bool 
string str1=""; ==> true
string str2;    ==> true

//substr 도려내서 반환 느낌 (해당 인덱스부터)
str1.substr() // //"BlockDMask"
str2=str1.substr(5);   -->index 5부터 끝까지 반환
str2=str1.substr(5,1); -->index 5부터 1개 반환   
str2=str1.substr(5,100); -->index 5부터 100개 반환 // !!자르는 갯수 초과하면 끝까지만 반환


str1.replace(5, 2, str2); //"BlockDMask"  --> kD가 str2로 대체 

str1.compare(str2);  
// 같으면 0 str2 
// str1<str2 --> (-) A<B            앞<뒤 --> -1 ,,,,,, 앞>뒤 --->1,,,,,,,,,, 같 0
// str1>str2 --> (+) C>B

string s1 = "asd";
string s2 = "asd";
if(s1==s2){ //길이X ㄹㅇ 같은지
    cout<<"asd";
} OK


string str1="abcdefghi"; // 길이 : 9
char arr[10]; //핵심
int arrLen = str1.copy(arr, 3, 5);  // 3개 인덱스 5부터.....  
arr[arrLen] = '\0'; 
cout<<str1<<endl;
cout<<arr<<endl; // fgh

string str1="abcdefghi";
int a = str1.find("de"); //3 //없으면 -1 반환
없으면 -1 반환!!!!

find("-",n)--> index n포함해서 찾음!!! --> 없으면 -1 반환
	
str1.push_back(char c) --> 문자하나만 가능 
str1.push_back('c') 
str1.pop_back()

string base = "hello world!"; 
base.append("appended!");
base.append(str2,0,4); //->str2의 idx 0부터 4개 q붙임 ;

str1.begin();

str1.end(); --> sort 가능 

string str1="abcdefghi";

sort(str1.begin(),str1.end(),greater<char>());

reverse(str1.begin(),str1.end());

//정렬하고 사용해야함 
s1.erase(    unique(   s1.begin()  ,s1.end()   ),   s1.end());

string str1="abcdefghi";
string str2 = "www";
swap(str1,str2);	
//동일
s=str2;
str2 = str1;
str1 = s;


string str1="abcdefghi";
str1+='a'; OK
str1+="aa"; OK


string a = "123";
a+=to_string('A'); --> 12365
a+=to_string('1'); --> 12349
a+=to_string(49);  -->12349 // 즉 그냥 숫자를 더하는 용도임 to_string은 

//단순 숫자를 더하면 안됨 ; 
a+=49;             -->1231
a+=to_string(49);  -->12349
a+='1';            -->1231
a+='A'             -->123A
a+="AD";           -->123AD


*문자열 --> 숫자로
char arr[5]="1000";
int a = stoi(arr); //1000;

* c 문자열화
str1.c_str() //string 문자열을 C스타일의 문자열로 변경해주는 함수
const char* arr = str1.c_str() 
// "BlockDMask"가 "BlockDMask\0"
//const 로만 받아야함 

string s = "abcdefghid:123";  
//vector 와 다름!! 
vector : 주소 줘야함
string : 인덱스 넘버
s.erase(4); // abcd --> 인덱스 4포함 다 날림 -->vector.erase(주소)--> INDEX XXX && 하나
s.erase(0,1)// abcd->bcd 하나날림 
s.erase(4,3); // 인덱스 4부터 3개 지움 //갯수 초과시에도 문제 X 이긴한데 확인해봐야함 사용 X  
s.erase(s.find("f"),1); // f만 지움 --> find가 인덱스값 반환 없으면 -1 
s.erase(s.find("f")); f포함 뒤로  다 지움 

bool comp(string s1, string s2){ // const string &s1,const string &s2
    return s1+s2>s2+s1;
}



char a = 'B'; --> 스트링화 할려면 
string tmp ;
tmp.push_back(a);

char a = 'B';
string tmp ;
tmp+=a;
cout<<tmp; //잘됨 ; 
 
string a= "0.23s";
string tmp = a.substr(0,100);//문제없음
int aa = stof(tmp)*100; 
cout<<aa; //23