//인덱스가 존재 
#include <deque>

deque<int> dq1;
deque<int> dq2(4); //--> 0,0,0,0
deque<int> dq3 = { 1, 2, 3 }; //OK
deque<int> dq4{ 1, 2, 3 }; // OK

*복사됨
deque<int> copy = dq;

//sort 가능
dq.begin()
dq.end()

//O
for (auto i = dq.begin(); i != dq.end(); i++) {
	cout << *i << endl;
}
//O
for(int i ; i < dq.size();i++){
		cout<<dq[i]<<" ";
}

dq.assign(5) : 원소 5개 0으로 초기화
dq.assign(5,10) : 원소 5개 10으로 초기화

dq.front() : 첫 번째 원소
dq.back() : 마지막 원소
dq.at(i) : i번째 원소

dq.push_front(5) : 첫 번째 원소 앞에 '5' 추가
dq.push_back(5) : 마지막 원소 뒤에 '5' 추가
dq.pop_front() : 첫 번째 원소 꺼내기
dq.pop_back() : 마지막 원소 꺼내기

dq.insert(v.begin(), 3) : deque 처음에 (iterator가 가리키는 위치에) '3' 추가, dq.insert(3, 4) 하면 3번 위치에 4 추가하고, 가리키는 iterator 반환

dq.size() : 실제 원소 수
dq.resize(10) : 메모리 공간 크기를 10으로 변경. 늘어난 공간은 0으로 초기화.

dq.clear() : 전체 원소 삭제
dq.erase(v.begin()) : iterator가 가리키는 원소 삭제. size만 변함.
dq.erase--> [) 적용